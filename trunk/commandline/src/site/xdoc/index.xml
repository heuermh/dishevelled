<?xml version="1.0"?>
<!--

    dsh-commandline  Command line parser based on typed arguments.
    Copyright (c) 2004-2007 held jointly by the individual authors.

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as published
    by the Free Software Foundation; either version 2.1 of the License, or (at
    your option) any later version.

    This library is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; with out even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
    License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this library;  if not, write to the Free Software Foundation,
    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA.

    > http://www.gnu.org/copyleft/lesser.html
    > http://www.opensource.org/licenses/lgpl-license.php

-->
<document>
  <properties>
    <title>commandline</title>
  </properties>
<body>

<section name="Summary">

<p>
dishevelled.org <b>commandline</b> is a command line parser based on typed arguments.
The commandline project requires java version 1.5 or later.
</p>

</section>

<section name="Example">

<p>
For example, given a Runnable whose constructor requires a String, a Date,
and a List of URLs
<source>
/**
 * My runnable.
 */
public class MyRunnable
  implements Runnable
{

  /**
   * Create a new my runnable with the specified arguments.
   *
   * @param arg0 string argument
   * @param arg1 date argument
   * @param arg2 list of URLs argument
   */
  public MyRunnable(final String arg0, final Date arg1, final List&lt;URL&gt; arg2)
  {
    // ...
  }
}
</source>
</p>
<p>
its <code>static void main(final String[] args)</code> method might be implemented as
<source>
CommandLine commandLine = null;
ArgumentList arguments = null;
try
{
  // create typed command-line arguments to match runnable constructor arguments
  StringArgument arg0 = new StringArgument(...);
  DateArgument arg1 = new DateArgument(...);
  URLListArgument arg2 = new URLListArgument(...);

  // create an argument list
  arguments = new ArgumentList(arg0, arg1, arg2);

  // create a command line from String[] args
  commandLine = new CommandLine(args);

  // parse the command line with the argument list
  CommandLineParser.parse(commandLine, arguments);

  // instantiate the runnable with values returned by the typed arguments
  Runnable r = new MyRunnable(arg0.getValue(), arg1.getValue(), arg2.getValue());
  r.run();
}
catch (CommandLineParseException e)
{
  // thrown by CommandLineParser.parse(...)
  Usage.usage("java MyRunnable [args]", e, commandLine, arguments, System.err);
}
catch (IllegalArgumentException e)
{
  // possibly thrown by MyRunnable(...) constructor
  Usage.usage("java MyRunnable [args]", e, commandLine, arguments, System.err);
}
</source>
</p>
</section>

<section name="Acknowledgements">
  <ul>
    <li>Powered by Apache <a href="http://maven.apache.org">Maven</a>.</li>
    <li>Project hosting by <a href="http://sourceforge.net">SourceForge.net</a>.</li>
  </ul>
  <p><img src="http://sourceforge.net/sflogo.php?group_id=113165&amp;type=1" width="88" height="31" border="0" alt="SourceForge.net Logo"/></p>
</section>
</body>
</document>
