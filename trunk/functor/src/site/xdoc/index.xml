<?xml version="1.0"?>
<!--

    dsh-functor  Typed functor interfaces.
    Copyright (c) 2004-2010 held jointly by the individual authors.

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as published
    by the Free Software Foundation; either version 3 of the License, or (at
    your option) any later version.

    This library is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; with out even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
    License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this library;  if not, write to the Free Software Foundation,
    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA.

    > http://www.fsf.org/licensing/licenses/lgpl.html
    > http://www.opensource.org/licenses/lgpl-license.php

-->
<document>

  <properties>
    <title>dishevelled.org functor</title>
  </properties>

<body>
<section name="Summary">

<p>
dishevelled.org <b>functor</b> is a library of typed functor object interfaces.
The functor project requires java version 1.5 or later.
</p>

<p>
Typed functor interfaces exist for Functions, Predicates, and Procedures with varying
numbers of parameters.  Functions also include a type for the return value.  Some examples:
<source>
Function&lt;Double&gt; f;
f = new Function&lt;Double&gt;()
  {
    /** {@inheritDoc} */
    public Double evaluate() { ... }
  };

UnaryPredicate&lt;Double&gt; up;
up = new UnaryPredicate&lt;Double&gt;()
  {
    /** {@inheritDoc} */
    public boolean test(final Double d) { ... }
  };

BinaryProcedure&lt;Integer, Double&gt; bp;
bp = new BinaryProcedure&lt;Integer, Double&gt;()
  {
    /** {@inheritDoc} */
    public void run(final Integer i, final Double d) { ... }
  };

TertiaryFunction&lt;Double, Integer, Double, Double&gt; tf;
tf = new TertiaryFunction&lt;Double, Integer, Double, Double&gt;()
  {
    /** {@inheritDoc} */
    public Double evaluate(final Integer i,
                           final Double d0,
                           final Double d1) { ... }
  };

QuaternaryPredicate&lt;Integer, Double, Double, Float&gt; qp;
qp = new QuaternaryPredicate&lt;Integer, Double, Double, Float&gt;()
  {
    /** {@inheritDoc} */
    public boolean test(final Integer i,
                        final Double d0,
                        final Double d2,
                        final Float f) { ... }
  };

NaryProcedure&lt;Double&gt; np;
np = new NaryProcedure&lt;Double&gt;()
  {
    /** {@inheritDoc} */
    public void run(final Double... ds) { ... }
  }
</source>
</p>

<p>
See also
</p>

<p>
Functor Objects (Wiki)<br/>
&gt; <a href="http://c2.com/cgi/wiki?FunctorObject">http://c2.com/cgi/wiki?FunctorObject</a>
</p>

<p>
Blocks In Java (Wiki)<br/>
&gt; <a href="http://c2.com/cgi/wiki?BlocksInJava">http://c2.com/cgi/wiki?BlocksInJava</a>
</p>

<p>
jga - Generic Algorithms for Java<br/>
&gt; <a href="http://jga.sourceforge.net">http://jga.sourceforge.net</a>
</p>

<p>
Apache Jakarta Commons Functor<br/>
&gt; <a href="http://jakarta.apache.org/commons/sandbox/functor">http://jakarta.apache.org/commons/sandbox/functor</a>
</p>

<p>
Colt Project<br/>
&gt; <a href="http://dsd.lbl.gov/~hoschek/colt">http://dsd.lbl.gov/~hoschek/colt</a><br/>
</p>

</section>

<section name="Acknowledgements">
  <ul>
    <li>Powered by Apache <a href="http://maven.apache.org">Maven</a>.</li>
    <li>Project hosting by <a href="http://sourceforge.net">SourceForge.net</a>.</li>
  </ul>
  <p><img src="http://sourceforge.net/sflogo.php?group_id=113165&amp;type=1" width="88" height="31" border="0" alt="SourceForge.net Logo"/></p>
</section>
</body>
</document>
