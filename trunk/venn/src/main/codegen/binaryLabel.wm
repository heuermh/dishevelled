
    /** Contents for the ${lower0} ${lower1} view. */
    private final JLabel ${lower0}${Upper1} = new JLabel();

        ${lower0}${Upper1}.setText(buildContents(getModel().${lower0}${Upper1}()));

        addField(get${Upper0}${Upper1}Label(), ${lower0}${Upper1});


    /**
     * Return the contents of the ${lower0} ${lower1} view.  The text for the returned JLabel
     * should not be changed, as the current text is synchronized to the
     * quaternary venn model backing this venn diagram.
     *
     * @return the contents of the ${lower0} ${lower1} view
     */
    public JLabel get${Upper0}${Upper1}()
    {
        return ${lower0}${Upper1};
    }

---

    /** Contents for the ${lower0} ${lower1} view. */
    private final JList ${lower0}${Upper1} = new JList();

    /** Adapter for the ${lower0} ${lower1} list model. */
    private SetEventListAdapter<E> ${lower0}${Upper1}Adapter;

        ${lower0}${Upper1}Adapter = new SetEventListAdapter<E>(getModel().${lower0}${Upper1}());
        ${lower0}${Upper1}.setModel(new EventListModel<E>(${lower0}${Upper1}Adapter));

        ${lower0}${Upper1}Adapter.updateEventList();

        ((EventListModel<E>) ${lower0}${Upper1}.getModel()).dispose();

        ${lower0}${Upper1}.addListSelectionListener(new UpdateSelectionView());

        LabelFieldPanel ft = new LabelFieldPanel();
        ft.addLabel(get${Upper0}${Upper1}Label());
        ft.addFinalField(new JScrollPane(${lower0}${Upper1}));
        panel.add(ft);

    /**
     * Return the contents of the ${lower0} ${lower1} view.  The model for the returned
     * JList should not be changed, as the current model implementation is
     * synchronized to the quaternary venn model backing this venn diagram.
     *
     * @return the contents of the ${lower0} ${lower1} view
     */
    public JList get${Upper0}${Upper1}()
    {
        return ${lower0}${Upper1};
    }

---