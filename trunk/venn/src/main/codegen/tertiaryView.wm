
    /** Label text for the ${lower0} ${lower1} ${lower2} view. */
    private String ${lower0}${Upper1}${Upper2}LabelText = DEFAULT_${UPPER0}_${UPPER1}_${UPPER2}_LABEL_TEXT;

    /** Label for the ${lower0} ${lower1} ${lower2} view. */
    private final JLabel ${lower0}${Upper1}${Upper2}Label = new JLabel();

    /** Default label text for the ${lower0} ${lower1} ${lower2} view, <code>"${Upper0}, ${lower1}, and ${lower2} only"</code>. */
    public static final String DEFAULT_${UPPER0}_${UPPER1}_${UPPER2}_LABEL_TEXT = "${Upper0}, ${lower1}, and ${lower2} only";

        this.${lower0}${Upper1}${Upper2}LabelText = ${lower0}LabelText + ", " + ${lower1}LabelText + ", and " + ${lower2}LabelText + " only";

        ${lower0}${Upper1}${Upper2}Label.setText(buildLabel(${lower0}${Upper1}${Upper2}LabelText, model.${lower0}${Upper1}${Upper2}().size()));

    /**
     * Return the label text for the ${lower0} ${lower1} ${lower2} view.  Defaults to {@link #DEFAULT_${UPPER0}_${UPPER1}_${UPPER2}_LABEL_TEXT}.
     *
     * @return the label text for the ${lower0} ${lower1} ${lower2} view
     */
    public final String get${Upper0}${Upper1}${Upper2}LabelText()
    {
        return ${lower0}${Upper1}${Upper2}LabelText;
    }

    /**
     * Set the label text for the ${lower0} ${lower1} ${lower2} view to <code>${lower0}${Upper1}${Upper2}LabelText</code>.
     *
     * <p>This is a bound property.</p>
     *
     * @param ${lower0}${Upper1}${Upper2}LabelText label text for the ${lower0} ${lower1} ${lower2} view
     */
    public final void set${Upper0}${Upper1}${Upper2}LabelText(final String ${lower0}${Upper1}${Upper2}LabelText)
    {
        String old${Upper0}${Upper1}${Upper2}LabelText = this.${lower0}${Upper1}${Upper2}LabelText;
        this.${lower0}${Upper1}${Upper2}LabelText = ${lower0}${Upper1}${Upper2}LabelText;
        ${lower0}${Upper1}${Upper2}Label.setText(buildLabel(this.${lower0}${Upper1}${Upper2}LabelText, model.${lower0}${Upper1}${Upper2}().size()));
        firePropertyChange("${lower0}${Upper1}${Upper2}LabelText", this.${lower0}${Upper1}${Upper2}LabelText, old${Upper0}${Upper1}${Upper2}LabelText);
    }

    /**
     * Return the label for the ${lower0} ${lower1} ${lower2} view.  The text for the returned JLabel
     * should not be changed, as the text is synchronized to the quaternary
     * venn model backing this venn diagram.  Use methods
     * {@link #set${Upper0}${Upper1}${Upper2}LabelText(String)} and {@link setDisplaySizes(boolean)}
     * to set the label text and whether to display sizes respectively.
     *
     * @return the label for the ${lower0} ${lower1} ${lower2} view
     */
    public final JLabel get${Upper0}${Upper1}${Upper2}Label()
    {
        return ${lower0}${Upper1}${Upper2}Label;
    }
