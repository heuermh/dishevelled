<?xml version="1.0"?>
<!--

    dsh-weighted  Weighted map interface and implementation.
    Copyright (c) 2005-2008 held jointly by the individual authors.

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as published
    by the Free Software Foundation; either version 3 of the License, or (at
    your option) any later version.

    This library is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; with out even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
    License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this library;  if not, write to the Free Software Foundation,
    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA.

    > http://www.fsf.org/licensing/licenses/lgpl.html
    > http://www.opensource.org/licenses/lgpl-license.php

-->
<document>
  <properties>
    <title>weighted</title>
  </properties>
<body>

<section name="Summary">

<p>
dishevelled.org <b>weighted</b> provides a weighted map interface and implementation,
that is, a map of elements to weights with sampling and ranking functionality.  The
weighted library requires java version 1.5 or later.
</p>

<p>
The <a href="apidocs/org/dishevelled/weighted/WeightedMap.html">WeightedMap</a> interface
extends the <code>Map&lt;K,V&gt;</code> interface and fills in the <code>V</code> type as
<code>Double</code>.  Specifically, <code>WeightedMap&lt;E&gt; extends Map&lt;E,Double&gt;</code>.
Thus clients of this interface only need to provide a type for the key:
</p>

<source>
WeightedMap&lt;String&gt; m = new HashWeightedMap&lt;String&gt;();
m.put("foo", 100.0d);
m.put("bar", 500.0d);
m.put("baz", 1000.0d);

assert(m.get("foo") == 100.0d);
assert(m.weight("foo") == 100.0d);
assert(m.totalWeight() == 1600.0d);
assert(m.normalizedWeight("foo") == 0.0625d);
assert(m.rank("baz") == 1);
assert(m.rank("bar") == 2);
assert(m.rank("foo") == 3);

List&lt;String&gt; list = new ArrayList&lt;String&gt;(100);
for (int i = 0; i &lt; 100; i++) {
  list.add(m.sample());
}

assert(cardinality in list of "foo" approximately equal to 6.25)
assert(cardinality in list of "bar" approximately equal to 31.25)
assert(cardinality in list of "baz" approximately equal to 62.5)
</source>
</section>

<section name="Acknowledgements">
  <ul>
    <li>Powered by Apache <a href="http://maven.apache.org">Maven</a>.</li>
    <li>Project hosting by <a href="http://sourceforge.net">SourceForge.net</a>.</li>
  </ul>
  <p><img src="http://sourceforge.net/sflogo.php?group_id=113165&amp;type=1" width="88" height="31" border="0" alt="SourceForge.net Logo"/></p>
</section>
</body>
</document>
